plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.sonarqube' version "4.4.1.3373"
	id 'jacoco'
}

group = 'iqadot'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.apache.pdfbox:pdfbox:2.0.1'
	implementation 'net.sf.cssbox:pdf2dom:1.8'
	implementation 'com.itextpdf:itextpdf:5.5.10'
	implementation 'com.itextpdf.tool:xmlworker:5.5.10'
	implementation 'org.apache.poi:poi-ooxml:3.15'
	implementation 'org.apache.poi:poi-scratchpad:3.15'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
//	implementation 'org.apache.commons:commons-csv:1.8'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.5'


//	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.5.0'
//    implementation 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20231013'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
//	implementation 'org.flywaydb:flyway-core:6.0.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind'



}

tasks.named('test') {
	useJUnitPlatform()
}

test{
	finalizedBy jacocoTestReport
}
sonarqube {
	properties {
		property 'sonar.projectKey', "Iqadot-Kit"
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.token', 'sqp_3ce228f83e7c89fa2938534c84a1a0c2150a451c'
		property 'sonar.scm.disabled', 'true'
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/configuration/*"
			])
		}))
	}
}

